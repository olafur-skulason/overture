#pragma once


class A
{
public:
    int one();
    A();
    virtual ~A();
protected:
private:
};

##########
#include "A.h"


int A::one(){
return 1;

}


A::A(){

}


##########
#pragma once

#include "A.h"

class Class
{
public:
    void Caller();
    void Called();
    Class();
    virtual ~Class();
protected:
private:
    A a = A();
};

##########
#include "Class.h"


void Class::Caller(){
    int v = a.one();
    Called();

}


void Class::Called(){
/* skip */
}


Class::Class(){

}


##########